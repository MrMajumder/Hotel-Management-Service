CREATE OR REPLACE TRIGGER AFTER_CANCEL_RESERV
BEFORE UPDATE
ON RESERVATION
FOR EACH ROW
DECLARE
B NUMBER;
RESID NUMBER;
BEGIN 
	RESID := :OLD.RESERVATION_ID;
	DBMS_OUTPUT.PUT_LINE(:OLD.RESERVATION_ID);
	UPDATE ROOM SET RESERVATION_ID = NULL WHERE RESERVATION_ID = RESID;
END;
/

CREATE OR REPLACE TRIGGER AFTER_CANCEL_SERVE
BEFORE UPDATE
ON ROOM_HB_SERV_RECEIVES
FOR EACH ROW
DECLARE
SCOST NUMBER;
BEGIN
	UPDATE EMPLOYEE SET AVAILABILITY = 0 WHERE USER_ID = (SELECT S.USER_ID FROM SERVICES S WHERE S.SERVICE_ID = :OLD.SERVICE_ID);
	SELECT COST INTO SCOST FROM SERVICES WHERE SERVICE_ID = :OLD.SERVICE_ID;
	UPDATE BILL SET COST = COST - SCOST WHERE BILL_ID = :OLD.BILL_ID;
	UPDATE SERVICES SET USER_ID = NULL WHERE SERVICE_ID = :OLD.SERVICE_ID;
EXCEPTION
WHEN NO_DATA_FOUND THEN
	DBMS_OUTPUT.PUT_LINE('1');
END;
/



CREATE OR REPLACE TRIGGER NEW_COMPLAIN
AFTER INSERT
ON COMPLAIN
FOR EACH ROW
DECLARE

BEGIN
	INSERT INTO NOTIFICATION VALUES (NOTI_ID.NEXTVAL ,:NEW.USER_ID , :NEW.COMP, 0, :NEW.CDATE);
END;
/