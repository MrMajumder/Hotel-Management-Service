
--DROP TRIGGER AFTER_CANCEL_RESERV;

CREATE OR REPLACE TRIGGER AFTER_CANCEL_SERVE
BEFORE UPDATE
ON ROOM_HB_SERV_RECEIVES
FOR EACH ROW
DECLARE
SCOST NUMBER;
BEGIN
	UPDATE EMPLOYEE SET AVAILABILITY = 0 WHERE USER_ID = (SELECT S.USER_ID FROM SERVICES S WHERE S.SERVICE_ID = :OLD.SERVICE_ID);
	UPDATE SERVICES SET USER_ID = NULL WHERE SERVICE_ID = :OLD.SERVICE_ID;
	IF (:NEW.SERVICE_ACTIVE <> 3) THEN
		SELECT COST INTO SCOST FROM SERVICES WHERE SERVICE_ID = :OLD.SERVICE_ID;
		UPDATE BILL SET COST = COST - SCOST WHERE BILL_ID = :OLD.BILL_ID;
	END IF;
	
EXCEPTION
WHEN NO_DATA_FOUND THEN
	DBMS_OUTPUT.PUT_LINE('1');
END;
/

CREATE OR REPLACE TRIGGER EMP_POS_CHANGE
BEFORE UPDATE 
OF POSITION
ON EMPLOYEE
FOR EACH ROW
DECLARE

BEGIN 
	IF :NEW.POSITION = 'Manager' THEN
		:NEW.PERMISSION := 2;
	ELSE
		:NEW.PERMISSION := 3;
	END IF;
END;
/
--DROP TRIGGER EMP_POS_CHANGE;

-- CREATE OR REPLACE TRIGGER NEW_COMPLAIN
-- AFTER INSERT
-- ON COMPLAIN
-- FOR EACH ROW
-- DECLARE
-- 
-- BEGIN
-- 	INSERT INTO NOTIFICATION VALUES (NOTI_ID.NEXTVAL ,:NEW.USER_ID , :NEW.COMP, 0, :NEW.CDATE);
-- END;
-- /


-- DROP TRIGGER NEW_COMPLAIN;