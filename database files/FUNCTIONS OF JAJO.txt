CREATE OR REPLACE FUNCTION ROOM_SEARCH(RID IN NUMBER, ADATE IN VARCHAR2, DDATE IN VARCHAR2)
RETURN NUMBER IS

NUM NUMBER;
D DATE;
A DATE;
AR DATE;
DD DATE;
 BEGIN
 AR := TO_DATE(ADATE,'YYYY-MM-DD HH24:MI:SS');
 DD := TO_DATE(DDATE,'YYYY-MM-DD HH24:MI:SS');
 NUM := 0;
 FOR R IN (SELECT BOOKED_ROOMS.ARRIVAL_DATE, BOOKED_ROOMS.DEPARTURE_DATE FROM BOOKED_ROOMS, RESERVATION WHERE BOOKED_ROOMS.ROOM_ID = RID AND RESERVATION.RESERVATION_ID = BOOKED_ROOMS.RESERVATION_ID AND RESERVATION.RESERVATION_ACTIVE IN (0, 1) ORDER BY BOOKED_ROOMS.ARRIVAL_DATE ASC)
 LOOP
		
	A := R.ARRIVAL_DATE;
	
	IF NUM = 0 THEN
		IF DD <= A THEN

			RETURN 1;
		ELSE
			NUM := NUM + 1;
			D := R.DEPARTURE_DATE;
		END IF;
	ELSE
		IF D <= AR AND DD <= A THEN
			RETURN 1;
		ELSE
			D := R.DEPARTURE_DATE;
		END IF;
	END IF;
 END LOOP;

IF AR >= D OR D IS NULL THEN 

	RETURN 1;
ELSE 
	RETURN 0;	
END IF;
END;
/



CREATE OR REPLACE FUNCTION SERVICE_ENTRY(SERVICET IN VARCHAR2, SERVICED IN VARCHAR2, ID IN NUMBER, RID IN NUMBER)
RETURN NUMBER IS 
 EMPID NUMBER;
 COSTT NUMBER;
 B_ID NUMBER;
 
BEGIN 
FOR R IN (SELECT SERVICE_ID FROM SERVICES WHERE SERVICE_TYPE = SERVICET AND USER_ID IS NULL)
	LOOP

	FOR E IN (SELECT X.USER_ID ID FROM EMPLOYEE X, ACCOUNT_HOLDER A WHERE X.USER_ID = A.USER_ID AND X.POSITION = SERVICET AND X.AVAILABILITY = 0 AND A.LOGIN_EMAIL IS NOT NULL)
	LOOP 

		SELECT BILL_ID INTO B_ID FROM HOTEL_BILL WHERE RESERVATION_ID = (SELECT DISTINCT RO.RESERVATION_ID FROM ROOM RO, RESERVATION RE WHERE RO.RESERVATION_ID = RE.RESERVATION_ID AND RO.ROOM_ID = RID AND RE.USER_ID = ID);

		UPDATE SERVICES SET USER_ID = E.ID, DESCRIPTION = SERVICED WHERE SERVICE_ID = R.SERVICE_ID;
		UPDATE EMPLOYEE SET AVAILABILITY = 1 WHERE USER_ID = E.ID;
		SELECT COST INTO COSTT FROM SERVICES WHERE SERVICE_ID = R.SERVICE_ID;
		UPDATE BILL SET COST = (COST + COSTT) WHERE BILL_ID = B_ID;	
		UPDATE HOTEL_BILL SET DUE = (DUE + COSTT) WHERE BILL_ID = B_ID;
		INSERT INTO ROOM_HB_SERV_RECEIVES VALUES (R.SERVICE_ID, RID, B_ID, 1, ACT_ID.NEXTVAL, SYSDATE, E.ID);
		RETURN 1;
	END LOOP;
END LOOP;
	RETURN 0;
EXCEPTION
WHEN NO_DATA_FOUND THEN
 RETURN 2;
END;
/


CREATE OR REPLACE FUNCTION CAN_RESERV(ID IN NUMBER)
RETURN NUMBER IS
AD DATE;
BEGIN
	SELECT ARRIVAL_DATE INTO AD FROM RESERVATION WHERE RESERVATION_ID = ID;
	IF AD <= TRUNC(SYSDATE) THEN
		RETURN 0;
	END IF;
	UPDATE RESERVATION SET RESERVATION_ACTIVE = 2 WHERE ID = RESERVATION_ID; 
	UPDATE ROOM SET RESERVATION_ID = NULL WHERE RESERVATION_ID = ID;
	RETURN 1;
END;
/


CREATE OR REPLACE FUNCTION DELETE_ACC(ID IN NUMBER)
RETURN NUMBER IS
C NUMBER;
LID VARCHAR2(100);
DELETEA NUMBER;
BEGIN
	SELECT COUNT(*) INTO C FROM RESERVATION WHERE USER_ID = ID AND RESERVATION_ACTIVE = 1;
	IF C <> 0 THEN
		RETURN 0;
	ELSE
		SELECT LOGIN_EMAIL INTO LID FROM ACCOUNT_HOLDER WHERE USER_ID = ID;
		UPDATE ACCOUNT_HOLDER SET LOGIN_EMAIL = NULL WHERE LOGIN_EMAIL = LID;
		UPDATE LOG_IN SET LOGIN_EMAIL = DELETE_AC.NEXTVAL WHERE LOGIN_EMAIL = LID;
		SELECT DELETE_AC.CURRVAL INTO DELETEA FROM DUAL;
		UPDATE ACCOUNT_HOLDER SET LOGIN_EMAIL = DELETEA WHERE LOGIN_EMAIL = LID;
		RETURN 1;
	END IF;
END;
/


